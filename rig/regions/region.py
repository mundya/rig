class Region(object):
 'Represents a region of data in the memory of a SpiNNaker core (SDRAM or\n    DTCM).\n    '
 def sizeof(self,vertex_slice):'Get the size requirements of the region in bytes.\n\n        Parameters\n        ----------\n        vertex_slice : :py:func:`slice`\n            A slice object which indicates which rows, columns or other\n            elements of the region should be included.\n\n        Returns\n        -------\n        int\n            The number of bytes required to store the data in the given slice\n            of the region.\n        ';raise NotImplementedError
 def write_subregion_to_file(self,vertex_slice,fp,**formatter_args):'Write a portion of the region to a file applying the formatter.\n\n        Parameters\n        ----------\n        vertex_slice : :py:func:`slice`\n            A slice object which indicates which rows, columns or other\n            elements of the region should be included.\n        fp : file-like object\n            The file-like object to which data from the region will be written.\n            This must support a `write` method.\n        formatter_args : optional\n            Arguments which will be passed to the (optional) formatter along\n            with each value that is being written.\n        ';raise NotImplementedError
